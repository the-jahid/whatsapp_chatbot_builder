
// ---------------------------------------------------
// 2. Zod Schema: src/conversation/conversation.schema.ts
// ---------------------------------------------------
// This file uses Zod to define validation schemas for creating and
// updating Conversation entities. It's the single source of truth for validation.

import { z } from 'zod';
import { SenderType } from '@prisma/client';

// Base schema reflecting the Prisma model for validation
export const conversationSchema = z.object({
  id: z.string().cuid(),
  senderJid: z.string().min(1, 'Sender JID cannot be empty'),
  message: z.string().min(1, 'Message cannot be empty'),
  senderType: z.nativeEnum(SenderType),
  createdAt: z.date(),
  agentId: z.string().uuid(),
});

// Schema for creating a new conversation entry
// We omit fields that are auto-generated by the database.
export const createConversationSchema = conversationSchema.omit({
  id: true,
  createdAt: true,
});

// Schema for updating an existing conversation entry
// All fields are made optional for partial updates.
export const updateConversationSchema = createConversationSchema.partial();
